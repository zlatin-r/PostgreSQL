Databases Introduction. Data Definition and Datatypes.
Едно е само да съхраняваме данни, друго е вече да ги менижираме

Проблема с flat storage (файлове)
Размер
Сложност на ъпдейтване
Точност
Кой има достъп
Какво е DBMS
DataBase Management System
Система оптимизирана за търсене и обработване на данни
Нямаме директен достъп до файловете, DBMS се грижи за товa
Ние пускаме заявка към engine-a, еngine-a обработва заявката взима от файовете и връща на нас.
Работим по TCP/IP протокола, но върху локалната машина;
RDBMS - данните и engine-a; Relational Database Management System;
SQL/NoSQL
Ползваме SQL, когато скалираме вертикално(upgrade на машината)
Ползваме NoSQL, когато скалираме хоризонатлно(нова машина)
Идеята на SQL синтаксиса е да е като изречение

Части на една заявка
Заявки - ALTER TABLE, ALTER COLUMNN, SELECT...
Клаузи - update/delete и тн
Изрази - salary * 1.1
Предикати - job_title = "Cashier"
Стейтмънти - Update Set Where, целия израз
Логически разделен на 4 категории
Data Definition - описваме какви са нашите данни, как изглеждат данните, как са обвързани, как ще изглежда нашата схема
Data Manipulation - READ/CREATE/UPDATE/DELETE
Data Control - контрол върху правата или кой има достъп до данните
Transaction Control - дали да пуснем заявките като група, тоест изпълняват се всички или нито една.
Защо ни трябват релации
Получваме абстракция, гъвкавост и не повтаряме информация
Нямаме празни записи (има случаи, в които е окей да имаме празни записи. Пример за презиме, защото човек има само едно такова и не е задължително)
Ключове
Primary - винаги уникални
Foreign
Entity/Relation диаграма
можем да виждаме схемите и връзките между таблиците
Типове данни
INT - small/int/big

DECIMAL/NUMERIC - можем да кажем, до кой символ след десетичната запетая да фиксираме

REAL - пази по-малка точност от double

DOUBLE

SERIAL - Създава скрипт, които да инкрементира числото на всеки нов запис, оставя вратата отворена за това ние ръчно да подадем стойност;

GENERATED ALWAYS AS IDENTITY - Създава скрипт, които инкрементира числото, без да ни позволява да въведем стойност ръчно

CHAR (255 symbols)

VARCHAR (65 535 symbols)

TEXT (65 535 symbols)

BLOB

DATE - дата без време - YYYY-MM-DD

TIME - време без дата

TIMESTAMP - дата и час

TIMESTAMPZ - дата, час и часова зона

Бонус: Индекси - два вида

Ползвaме ги, когато често търсим по едно поле
Clustered - групиран по някакъв начин, често ползваме primary key-a
Non-Clustered - индексираме по всяко поле, по което пожелаем имаме линкове към реалните данни
